<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.CAKESHOP.mapper.ShowPersonalInformationMapper">

    <select id="selectUserInformation" resultMap="PersonalInformationMap" >
      select user_phone,user_name,user_password,email,gender,money,portrait_url from users
      where user_phone like '%${user_phone}%';
    </select>

    <update id="reviseInformation">
        update users set user_name = '${user_name}',user_password = '${user_password}',gender = '${gender}',email = '${email}'
        where user_phone like '${user_phone}';
    </update>


    <!-- 下面的SQL语句实现数据库信息向Product类的传输（即数据库——>DAO层） -->
    <resultMap id="PersonalInformationMap" type="com.CAKESHOP.dao.PersonalInformation">
        <!-- 下面"result"标签中，"column"与数据库表中的列名对应，"property"与DAO层定义的类中的属性对应（在这里指"Product.java"），一般取同名 -->
        <id column="user_id" property="user_id" jdbcType="INTEGER"/>
        <result column="user_phone" property="user_phone" jdbcType="VARCHAR"/>
        <result column="user_name" property="user_name" jdbcType="VARCHAR"/>
        <result column="user_password" property="user_password" jdbcType="VARCHAR"/>
        <result column="email" property="email" jdbcType="VARCHAR"/>
        <result column="gender" property="gender" jdbcType="CHAR"/>
        <result column="last_login" property="last_login" jdbcType="TIMESTAMP"/>
        <result column="active" property="active" jdbcType="INTEGER"/>
        <result column="portrait_url" property="portrait_url" jdbcType="VARCHAR"/>
        <result column="money" property="money" jdbcType="INTEGER"/>
    </resultMap>
</mapper>